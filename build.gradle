//  Copyright (c) 2019 Gonzalo MÃ¼ller Bravo.
//  Licensed under the MIT License (MIT), see LICENSE.txt

plugins {
  id 'all.shared.gradle.code-common-tasks' version '1.0.1'
  id 'all.shared.gradle.project-style-checker' version '1.0.2'
  id 'com.github.ksoichiro.console.reporter' version '0.6.2'
  id 'com.gradle.plugin-publish' version '0.10.0'
  id 'groovy'
  id 'jacoco'
}

repositories {
  jcenter()
  maven {
    url 'https://plugins.gradle.org/m2/'
  }
  maven {
    url 'https://dl.bintray.com/gmullerb/all.shared.gradle'
  }
}

dependencies {
  compile gradleApi()
  compile 'gradle.plugin.all.shared.gradle.file-lister:file-lister:+'
  testCompile 'all.shared.gradle:spy-project-factory:+'
  testCompile 'pl.pojo:pojo-tester:+'
  testCompile 'org.junit.jupiter:junit-jupiter-api:+'
  testCompile 'org.mockito:mockito-core:+'
  testRuntime 'org.junit.jupiter:junit-jupiter-engine:+'
}

// Plugin settings
//////////////////

pluginBundle {
  website = 'https://gitlab.com/gmullerb/qrc-file-generator/'
  vcsUrl = 'https://github.com/gmullerb/qrc-file-generator/'
  description = 'QRC File Generator for QML Projects.'
  tags = ['qrc file', 'qrc generator', 'qrc file generator', 'qml project', 'qrc', 'qml', 'qt', 'qt quick']

  plugins {
    thePlugin {
      id = project.hasProperty('PLUGIN_ID')
        ? property('PLUGIN_ID')
        : 'Set plugin id'
      displayName = 'Qrc File Generator plugin'
    }
  }
}

consoleReporter {
  jacoco {
    autoconfigureCoverageConfig false
  }
}

// Task settings
////////////////

test {
  useJUnitPlatform()
  finalizedBy reportCoverage
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

jacocoTestCoverageVerification {
  // jacocoTestCoverageVerification task settings
  violationRules {
    rule {
      element = 'BUNDLE'
      limit {
        counter = 'BRANCH'
        value = 'COVEREDRATIO'
        minimum = 0.925
      }
    }
    rule {
      element = 'BUNDLE'
      limit {
        counter = 'INSTRUCTION'
        value = 'COVEREDRATIO'
        minimum = 0.875
      }
    }
  }
  // gradle task settings
  shouldRunAfter jacocoTestReport
}

reportCoverage {
  dependsOn jacocoTestReport
}

// Default task
///////////////

defaultTasks 'assessCommon', 'assessGradle', 'build'
